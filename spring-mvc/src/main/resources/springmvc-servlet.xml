<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.2.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">
<!--包扫描组件-->
    <context:component-scan base-package="com.ifunyoung"/>
    <!--资源解析器-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀-->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!--后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--全局解决responseBody的中文乱码问题-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">          
                	<property name="writeAcceptCharset" value="false"/><!-- 避免响应头过大,如果为true,会将所有支持的字符编码都写到response header的acceptCharset里，会额外多传输很多字节 -->
                    <constructor-arg value="UTF-8"></constructor-arg>
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <!--注册注解驱动-->
    <mvc:annotation-driven />
    <!--注册日期类型转换器-->
    <bean id="dateConverter" class="com.ifunyoung.converter.DateConverter"/>
    <!--该bean的id为固定的-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="dateConverter"/>
            </set>
        </property>
    </bean>

    <!--访问静态资源-->
    <!--<mvc:resources mapping="/static/**" location="/static/"/>--> <!--在部分spring版本中，这种写法与converter冲突，启动异常-->
    <!--没有映射到的url，交给默认的web容器中servlet进行处理-->
    <mvc:default-servlet-handler/>

    <!--springmvc 文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="102400000"/>
    </bean>

    <!--除了用@ControllerAdvice 注解类表明是全局异常处理类之外，还可以用以下配置，声明全局异常处理类
        defaultErrorView    定义默认异常处理页面
        exceptionAttribute  定义异常页面获取异常信息的变量名，默认为exception
        exceptionMappings   定义特殊处理的异常
    -->
    <!--
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="/WEB-INF/jsp/error.jsp"/>
        <property name="exceptionAttribute" value="exception"/>
        <property name="exceptionMappings">
            <props>
                <prop key="com.ifunyoung.exception.CustomException1">/WEB-INF/jsp/customError1.jsp</prop>
                <prop key="com.ifunyoung.exception.CustomException2">/WEB-INF/jsp/customError2.jsp</prop>
            </props>
        </property>
    </bean>
    -->
    <!--注册自定义拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ifunyoung.interceptor.CustomInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--json格式数据转换的配置,貌似没起作用  -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          p:ignoreDefaultModelOnRedirect="true">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!--注册表单验证器-->
    <!--这个LocalValidatorFactoryBean加载启动异常，暂未解决-->
    <!--<bean id="customValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>-->
</beans>